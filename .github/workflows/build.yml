name: Build and Publish

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        target:
          - name: ath79
            goarch: mips
            gomips: softfloat
            model: gl-ar300m
          - name: glmt3000
            goarch: arm64
            model: gl-mt3000
          - name: glmt6000
            goarch: arm64
            model: gl-mt6000
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build Binary
        run: |
          cd ./src
          EXTRA_FLAGS=""
          if [ "${{ matrix.target.gomips }}" != "" ]; then
            EXTRA_FLAGS="GOMIPS=${{ matrix.target.gomips }}"
          fi
          env GOOS=linux GOARCH=${{ matrix.target.goarch }} $EXTRA_FLAGS \
            go build -o binary-${{ matrix.target.name }} -trimpath -ldflags="-s -w"

      - name: Upload Binary to Blossom
        id: upload_binary
        uses: c03rad0r/upload-blossom-action@pr/using-nsec-argument-correct-state
        with:
          host: "https://blossom.swissdash.site"
          filePath: ./src/binary-${{ matrix.target.name }}
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish Binary NIP-94 Metadata
        id: publish_binary
        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
        with:
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
          url: ${{ steps.upload_binary.outputs.blossomUrl }}
          mimeType: application/octet-stream
          fileHash: ${{ steps.upload_binary.outputs.blossomHash }}
          originalHash: ${{ steps.upload_binary.outputs.blossomHash }}
          content: "TollGate Module Relay binary for ${{ matrix.target.name }}"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload_binary.outputs.size }}
          architecture: ${{ matrix.target.goarch }}

      - name: Verify Binary NIP-94 Event
        id: verify_binary
        uses: OpenTollGate/nostr-publish-file-metadata-action/python/verify@main
        with:
          eventId: ${{ steps.publish_binary.outputs.eventId }}
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/

      - name: Check Binary Publication
        if: steps.verify_binary.outcome != 'success'
        run: |
          echo "❌ Failed to verify binary publication on relays"
          exit 1

  build-package:
    needs: build-binary
    uses: OpenTollGate/tollgate-sdk/.github/workflows/build-firmware.yml@main
    with:
      model: ${{ matrix.target.model }}
      module: tollgate-module-relay-go

  publish-package:
    needs: build-package
    runs-on: ubuntu-latest
    steps:
      - name: Upload Package to Blossom
        id: upload_package
        uses: c03rad0r/upload-blossom-action@pr/using-nsec-argument-correct-state
        with:
          host: "https://blossom.swissdash.site"
          filePath: ${{ needs.build-package.outputs.ipk_path }}
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish Package NIP-94 Metadata
        id: publish_package
        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
        with:
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
          url: ${{ steps.upload_package.outputs.blossomUrl }}
          mimeType: application/x-opkg
          fileHash: ${{ steps.upload_package.outputs.blossomHash }}
          originalHash: ${{ steps.upload_package.outputs.blossomHash }}
          content: "TollGate Module Relay OpenWRT package for ${{ matrix.target.model }}"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload_package.outputs.size }}
          architecture: ${{ env.PLATFORM }}

      - name: Verify Package NIP-94 Event
        id: verify_package
        uses: OpenTollGate/nostr-publish-file-metadata-action/python/verify@main
        with:
          eventId: ${{ steps.publish_package.outputs.eventId }}
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/

      - name: Check Package Publication
        if: steps.verify_package.outcome != 'success'
        run: |
          echo "❌ Failed to verify package publication on relays"
          exit 1

      - name: Build Summary
        run: |
          echo "Build Summary for ${{ matrix.target.name }}:"
          echo "✅ Binary successfully built and published"
          echo "✅ Package successfully built and published"
          echo "Binary URL: ${{ steps.upload_binary.outputs.blossomUrl }}"
          echo "Package URL: ${{ steps.upload_package.outputs.blossomUrl }}"
