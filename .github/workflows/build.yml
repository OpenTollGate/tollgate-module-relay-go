name: Build

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        target: [ath79, glmt3000, glmt6000]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build for ATH79 (MIPS)
        if: matrix.target == 'ath79'
        run: |
          cd ./src
          env GOOS=linux GOARCH=mips GOMIPS=softfloat go build -o updater-ath79 -trimpath -ldflags="-s -w"

      - name: Build for GL-MT3000 (ARM)
        if: matrix.target == 'glmt3000'
        run: |
          cd ./src
          env GOOS=linux GOARCH=arm go build -o updater-glmt3000 -trimpath -ldflags="-s -w"

      - name: Build for GL-MT6000 (ARM64)
        if: matrix.target == 'glmt6000'
        run: |
          cd ./src
          env GOOS=linux GOARCH=arm64 go build -o updater-glmt6000 -trimpath -ldflags="-s -w"

    - name: Check Required Secrets
      run: |
        missing_secrets=()
    
        if [ -z "${{ secrets.NSEC }}" ]; then
          missing_secrets+=("NSEC")
        fi
    
        # Add any other required secrets/variables here following the same pattern
        if [ ${#missing_secrets[@]} -ne 0 ]; then
          echo "::error::Missing required secrets: ${missing_secrets[*]}"
          echo "Please set the following secrets in your repository settings:"
          printf '%s\n' "${missing_secrets[@]}"
          exit 1
        else
          echo "All required secrets are set"
        fi

      - name: Upload to Blossom
        id: upload
        uses: c03rad0r/upload-blossom-action@pr/using-nsec-argument-correct-state
        with:
          host: "https://blossom.swissdash.site"
          filePath: ./src/updater-${{ matrix.target }}
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish NIP-94 Metadata
        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
        with:
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
          url: ${{ steps.upload.outputs.blossomUrl }}
          mimeType: application/octet-stream
          fileHash: ${{ steps.upload.outputs.blossomHash }}
          originalHash: ${{ steps.upload.outputs.blossomHash }}
          content: "TollGate Module Relay binary for ${{ matrix.target }}"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload.outputs.size }}
          # TODO: add architecture

      - name: Create OpenWRT package
        uses: OpenTollGate/tollgate-sdk@main
        with:
          packageName: 'tollgate-module-relay-go'
          makeFilePath: 'Makefile'
